{
    "sourceFile": "lib/screens/AssetTransaction/asset_inventory/scanned_asset_screen.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752144406516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752146233968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n       body: isLoading == true\n           ? Center(\n               child: CircularProgressIndicator(\n                 color: Constant.primaryColor,\n-                strokeWidth: 5,\n+                strokeWidth: 2,\n                 strokeCap: StrokeCap.round,\n               ),\n             )\n           : assetGenerateModel.isEmpty\n"
                }
            ],
            "date": 1752144406516,
            "name": "Commit-0",
            "content": "import 'package:fats_client/Services/AssetGenerate/NewAssetTagGenerateServices.dart';\nimport 'package:fats_client/constants.dart';\nimport 'package:fats_client/models/AssetGenerateModel.dart';\nimport 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\n\nclass ScannedAssetsScreen extends StatefulWidget {\n  const ScannedAssetsScreen({Key? key}) : super(key: key);\n\n  @override\n  State<ScannedAssetsScreen> createState() => _ScannedAssetsScreenState();\n}\n\nclass _ScannedAssetsScreenState extends State<ScannedAssetsScreen> {\n  List<AssetGenerateModel> assetGenerateModel = [];\n  List<bool> isMarked = [];\n  int rowsPerPage = PaginatedDataTable.defaultRowsPerPage;\n  bool isLoading = true;\n\n  @override\n  void initState() {\n    super.initState();\n    fetchData();\n  }\n\n  Future<void> fetchData() async {\n    Future.delayed(Duration.zero, () {\n      NewAssetTagGenerateServices.tagGenerate().then(\n        (response) {\n          setState(() {\n            assetGenerateModel = response;\n            isMarked =\n                List.generate(assetGenerateModel.length, (index) => false);\n\n            // reverse the list to show the latest data first\n            assetGenerateModel = assetGenerateModel.reversed.toList();\n            isLoading = false;\n          });\n        },\n      ).onError((error, stackTrace) {\n        Navigator.pop(context);\n        print(\"Error is: $error\");\n        setState(() {\n          isLoading = false;\n        });\n      });\n    });\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.white,\n      appBar: AppBar(\n        title: const Text('View Scanned Assets'),\n        centerTitle: true,\n        elevation: 0,\n        backgroundColor: Constant.primaryColor,\n        foregroundColor: Colors.white,\n      ),\n      // floatingActionButton: FloatingActionButton.extended(\n      // onPressed: () {\n      //   Constant.showLoadingDialog(context);\n      //   GenerateTagsServices.tagGenerate(context);\n      // },\n      //   label: const Text('Generate Tags'),\n      // ),\n      body: isLoading == true\n          ? Center(\n              child: CircularProgressIndicator(\n                color: Constant.primaryColor,\n                strokeWidth: 5,\n                strokeCap: StrokeCap.round,\n              ),\n            )\n          : assetGenerateModel.isEmpty\n              ? Center(\n                  child: Image.network(Constant.placeHolderImage),\n                )\n              : Stack(\n                  children: [\n                    SingleChildScrollView(\n                      child: Column(\n                        children: [\n                          PaginatedDataTable(\n                            showCheckboxColumn: false,\n                            headingRowColor: MaterialStateProperty.all(\n                                Constant.primaryColor),\n                            rowsPerPage: rowsPerPage,\n                            onRowsPerPageChanged: (value) {\n                              setState(() {\n                                rowsPerPage = value ??\n                                    PaginatedDataTable.defaultRowsPerPage;\n                              });\n                            },\n                            columns: [\n                              DataColumn(\n                                  label: const Text('Id',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Major Category',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text(\n                                      'Major Category Description',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Minor Category',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text(\n                                      'Minor Category Description',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Tag Number',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Serial Number',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Asset Description',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Asset Type',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Asset Condition',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Manufacturer',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Model Manufacturer',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Region',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Country',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('City',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Department Code',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Department Name',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Business Unit',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Building Number',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Floor Number',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Employee Id',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('PO Number',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Delivery Note Number',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Supplier',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Invoice Number',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Invoice Date',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Ownership',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Bought',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Terminal Id',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('ATM Number',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Location Tag',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Building Name',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Building Address',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('User Login Id',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Main Sub Series',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Asset Date Captured',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Asset Time Captured',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Asset Date Scanned',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Asset Time Scanned',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Qty',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Phone Exit Number',\n                                      style: TextStyle(color: Colors.white))),\n                              DataColumn(\n                                  label: const Text('Full Location Details',\n                                      style: TextStyle(color: Colors.white))),\n                            ],\n                            source: _DataSource(\n                              context: context,\n                              assetGenerateModel: assetGenerateModel,\n                              isMarked: isMarked,\n                              setState: setState,\n                            ),\n                          ),\n                        ],\n                      ),\n                    ),\n                  ],\n                ),\n    );\n  }\n\n  DataColumn dataColumn(String label) {\n    return DataColumn(\n      label: Text(\n        label,\n        style: const TextStyle(\n          color: Colors.white,\n        ),\n      ),\n    );\n  }\n}\n\nclass _DataSource extends DataTableSource {\n  final BuildContext context;\n  final List<AssetGenerateModel> assetGenerateModel;\n  final List<bool> isMarked;\n  final void Function(VoidCallback fn) setState;\n\n  _DataSource({\n    required this.context,\n    required this.assetGenerateModel,\n    required this.isMarked,\n    required this.setState,\n  });\n\n  @override\n  DataRow getRow(int index) {\n    final asset = assetGenerateModel[index];\n    return DataRow(\n      cells: [\n        DataCell(Text((index + 1).toString())),\n        DataCell(Text(asset.majorCategory ?? '')),\n        DataCell(Text(asset.majorCategoryDescription ?? '')),\n        DataCell(Text(asset.mInorCategory ?? '')),\n        DataCell(Text(asset.minorCategoryDescription ?? '')),\n        DataCell(\n          Row(\n            mainAxisAlignment: MainAxisAlignment.spaceAround,\n            children: [\n              SelectableText(asset.tagNumber ?? \"\"),\n              IconButton(\n                onPressed: () {\n                  Clipboard.setData(ClipboardData(text: asset.tagNumber ?? \"\"));\n                  ScaffoldMessenger.of(context).showSnackBar(\n                    const SnackBar(\n                      content: Text('Tag Number Copied to Clipboard'),\n                      backgroundColor: Colors.black,\n                    ),\n                  );\n                },\n                icon: const Icon(\n                  Icons.copy,\n                  color: Colors.grey,\n                ),\n              ),\n            ],\n          ),\n        ),\n        DataCell(Text(asset.sERIALnUMBER ?? \"\")),\n        DataCell(Text(asset.aSSETdESCRIPTION ?? \"\")),\n        DataCell(Text(asset.assettYPE ?? \"\")),\n        DataCell(Text(asset.aSSETcONDITION ?? \"\")),\n        DataCell(Text(asset.manufacturer ?? \"\")),\n        DataCell(Text(asset.modelofAsset ?? \"\")),\n        DataCell(Text(asset.rEGION ?? \"\")),\n        DataCell(Text(asset.cOUNTRY ?? \"\")),\n        DataCell(Text(asset.cityName ?? \"\")),\n        DataCell(Text(asset.dao ?? \"\")),\n        DataCell(Text(asset.daoName ?? \"\")),\n        DataCell(Text(asset.businessUnit ?? \"\")),\n        DataCell(Text(asset.bUILDINGNO ?? \"\")),\n        DataCell(Text(asset.fLOORNO ?? \"\")),\n        DataCell(Text(asset.eMPLOYEEID ?? \"\")),\n        DataCell(Text(asset.ponUmber ?? \"\")),\n        DataCell(Text(asset.deliveryNoteNo ?? \"\")),\n        DataCell(Text(asset.supplier ?? \"\")),\n        DataCell(Text(asset.invoiceNo ?? \"\")),\n        DataCell(Text(asset.invoiceDate ?? \"\")),\n        DataCell(Text(asset.ownership ?? \"\")),\n        DataCell(Text(asset.bought ?? \"\")),\n        DataCell(Text(asset.terminalID ?? \"\")),\n        DataCell(Text(asset.aTMNumber ?? \"\")),\n        DataCell(Text(asset.locationTag ?? \"\")),\n        DataCell(Text(asset.buildingName ?? \"\")),\n        DataCell(Text(asset.buildingAddress ?? \"\")),\n        DataCell(Text(asset.userLoginID ?? \"\")),\n        DataCell(Text(asset.mainSubSeriesNo?.toString() ?? \"\")),\n        const DataCell(Text(\"\")),\n        DataCell(Text(asset.assetdatecaptured ?? \"\")),\n        DataCell(Text(asset.assetTimeCaptured ?? \"\")),\n        DataCell(Text(asset.assetdatescanned ?? \"\")),\n        DataCell(Text(asset.assettimeScanned ?? \"\")),\n        DataCell(Text(asset.qTY?.toString() ?? \"\")),\n        DataCell(Text(asset.phoneExtNo ?? \"\")),\n        DataCell(Text(asset.fullLocationDetails ?? \"\")),\n      ],\n    );\n  }\n\n  @override\n  int get rowCount => assetGenerateModel.length;\n\n  @override\n  bool get isRowCountApproximate => false;\n\n  @override\n  int get selectedRowCount => isMarked.where((marked) => marked).length;\n}\n"
        }
    ]
}