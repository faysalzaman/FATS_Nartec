{
    "sourceFile": "lib/screens/AssetVarification/asset_tag_information.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1752144406509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1752146233969,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,9 +151,9 @@\n           ? Center(\n               child: CircularProgressIndicator(\n               color: Constant.primaryColor,\n               backgroundColor: Colors.white,\n-              strokeWidth: 5,\n+              strokeWidth: 2,\n               strokeCap: StrokeCap.round,\n             ))\n           : Container(\n               padding: const EdgeInsets.all(10),\n"
                }
            ],
            "date": 1752144406509,
            "name": "Commit-0",
            "content": "import 'dart:io';\n\nimport 'package:flutter/material.dart';\nimport 'package:image_picker/image_picker.dart';\n\nimport '../../Services/AssetVarification/AsseetConditionServices.dart';\nimport '../../Services/AssetVarification/BoughtServices.dart';\nimport '../../Services/AssetVarification/EmployeeNameIdServices.dart';\nimport '../../Services/AssetVarification/SaveTag.dart';\nimport '../../Services/AssetVarification/TagNumberServices.dart';\nimport '../../constants.dart';\nimport '../../widgets/text_form_field_widget.dart';\n\nclass AssetTagInformation extends StatefulWidget {\n  const AssetTagInformation({super.key});\n\n  @override\n  State<AssetTagInformation> createState() => _AssetTagInformationState();\n}\n\nclass _AssetTagInformationState extends State<AssetTagInformation> {\n  final GlobalKey<FormState> _formKey = GlobalKey<FormState>();\n\n  final TextEditingController _locationTagController = TextEditingController();\n  final TextEditingController _tagController = TextEditingController();\n  final TextEditingController _assetLocationDetailsController =\n      TextEditingController();\n  final TextEditingController _serialNoController = TextEditingController();\n  final TextEditingController _phoneExtensionController =\n      TextEditingController();\n  final TextEditingController _employeeIdController = TextEditingController();\n  final TextEditingController _otherTagController = TextEditingController();\n  final TextEditingController _notesController = TextEditingController();\n\n  String? selectEmployeeName;\n  var employeeNameList = [];\n\n  String? selectAssetCondition;\n  var assetConditionList = [];\n\n  String? selectBought;\n  var boughtList = [];\n\n  final ImagePicker imgpicker = ImagePicker();\n  List<XFile>? imagefiles;\n  var employeeIdList = [];\n\n  @override\n  void initState() {\n    super.initState();\n    EmployeeNameIdServices.nameIDMethod().then((employees) {\n      setState(() {\n        selectEmployeeName = employees[0].empName.toString();\n        _employeeIdController.text = employees[0].empID.toString();\n\n        for (var employee in employees) {\n          employeeNameList.add(employee.empName.toString());\n          employeeIdList.add(employee.empID.toString());\n        }\n      });\n    });\n\n    AssetConditionServices.assetCondition().then((assetCondition) {\n      setState(() {\n        selectAssetCondition =\n            assetCondition[0].tblConditionDescription.toString();\n        for (var asset in assetCondition) {\n          assetConditionList.add(asset.tblConditionDescription.toString());\n        }\n      });\n    });\n\n    BoughtServices.assetCondition().then((value) {\n      setState(() {\n        selectBought = value[0].tblConditionDescriptionBought.toString();\n        for (var bought in value) {\n          boughtList.add(bought.tblConditionDescriptionBought.toString());\n        }\n\n        isLoading = false;\n      });\n    });\n  }\n\n  bool isLoading = true;\n\n  int tblAssetMasterEncodeAssetCaptureID = 0;\n  String majorCategory = \"\";\n  String majorCategoryDescription = \"\";\n  String minorCategory = \"\";\n  String minorCategoryDescription = \"\";\n  String tagNumber = \"\";\n  String serialNumber = '';\n  String assetDescription = \"\";\n  String assetType = '';\n  String assetCondition = '';\n  String country = \"\";\n  String region = \"\";\n  String cityName = \"\";\n  String dao = \"\";\n  String daoName = '';\n  String businessUnit = \"\";\n  String buildingNo = \"\";\n  String floorNo = \"\";\n  String employeeID = '';\n  String ponNumber = '';\n  String poDate = '';\n  String deliveryNoteNo = '';\n  String supplier = '';\n  String invoiceNo = '';\n  String invoiceDate = '';\n  String modelOfAsset = \"\";\n  String manufacturer = \"\";\n  String ownership = '';\n  String bought = '';\n  String terminalID = '';\n  String atmNumber = '';\n  String locationTag = '';\n  String buildingName = \"\";\n  String buildingAddress = \"\";\n  String userLoginID = \"\";\n  int mainSubSeriesNo = 0;\n  String assetDateCaptured = '';\n  String assetTimeCaptured = '';\n  String assetDateScanned = '';\n  String assetTimeScanned = '';\n  int qty = 0;\n  String phoneExtNo = '';\n  String fullLocationDetails = '';\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      backgroundColor: Colors.white,\n      appBar: AppBar(\n        // leading icon color white\n        iconTheme: const IconThemeData(color: Colors.white),\n        backgroundColor: Constant.primaryColor,\n        title: const Text(\n          'Asset Tag Information',\n          style: TextStyle(\n            color: Colors.white,\n            fontWeight: FontWeight.bold,\n            fontSize: 18,\n          ),\n        ),\n        centerTitle: true,\n        elevation: 10,\n      ),\n      body: isLoading == true\n          ? Center(\n              child: CircularProgressIndicator(\n              color: Constant.primaryColor,\n              backgroundColor: Colors.white,\n              strokeWidth: 2,\n              strokeCap: StrokeCap.round,\n            ))\n          : Container(\n              padding: const EdgeInsets.all(10),\n              child: Form(\n                key: _formKey,\n                child: SingleChildScrollView(\n                  child: Center(\n                    child: Column(\n                      crossAxisAlignment: CrossAxisAlignment.center,\n                      children: <Widget>[\n                        Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            const SizedBox(\n                              child: Text(\n                                \"Location Tag\",\n                                style: TextStyle(\n                                  fontSize: 15,\n                                  color: Colors.black,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                            const SizedBox(height: 5),\n                            TextFormFieldWidget(\n                              controller: _locationTagController,\n                              height: 50,\n                              width: MediaQuery.of(context).size.width * 0.9,\n                            ),\n                          ],\n                        ),\n                        const SizedBox(height: 10),\n                        Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            const SizedBox(\n                              child: Text(\n                                \"Tag*\",\n                                style: TextStyle(\n                                  fontSize: 15,\n                                  color: Colors.black,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                            const SizedBox(height: 5),\n                            SizedBox(\n                              width: MediaQuery.of(context).size.width * 0.9,\n                              child: Row(\n                                children: <Widget>[\n                                  Expanded(\n                                    flex: 2,\n                                    child: TextFormFieldWidget(\n                                      controller: _tagController,\n                                      height: 50,\n                                    ),\n                                  ),\n                                  const SizedBox(width: 5),\n                                  Expanded(\n                                    flex: 1,\n                                    child: ClipRRect(\n                                      borderRadius: BorderRadius.circular(50),\n                                      child: ElevatedButton(\n                                        style: ElevatedButton.styleFrom(\n                                          backgroundColor:\n                                              Constant.primaryColor,\n                                          foregroundColor: Colors.white,\n                                        ),\n                                        onPressed: () async {\n                                          TagNumberServices.tagNo(\n                                                  _tagController.text)\n                                              .then((value) {\n                                            var daoName =\n                                                value.recordset![0].daoName ??\n                                                    \"\";\n\n                                            var businessUnit = value\n                                                    .recordset![0]\n                                                    .businessUnit ??\n                                                \"\";\n                                            var buildingAddress = value\n                                                    .recordset![0]\n                                                    .buildingAddress ??\n                                                \"\";\n                                            var buildingNo = value\n                                                    .recordset![0].bUILDINGNO ??\n                                                \"\";\n                                            var floorNo =\n                                                value.recordset![0].fLOORNO ??\n                                                    \"\";\n\n                                            setState(() {\n                                              _assetLocationDetailsController\n                                                      .text =\n                                                  \"$daoName - $businessUnit\\n$buildingAddress\\n$buildingNo - $floorNo\";\n\n                                              tblAssetMasterEncodeAssetCaptureID =\n                                                  value.recordset![0]\n                                                          .tblAssetMasterEncodeAssetCaptureID ??\n                                                      0;\n                                              majorCategory = value\n                                                      .recordset![0]\n                                                      .majorCategory ??\n                                                  \"\";\n                                              majorCategoryDescription = value\n                                                      .recordset![0]\n                                                      .majorCategoryDescription ??\n                                                  \"\";\n                                              minorCategory = value\n                                                      .recordset![0]\n                                                      .minorCategoryDescription ??\n                                                  \"\";\n                                              minorCategoryDescription = value\n                                                      .recordset![0]\n                                                      .minorCategoryDescription ??\n                                                  \"\";\n                                              tagNumber = value.recordset![0]\n                                                      .tagNumber ??\n                                                  \"\";\n                                              serialNumber = value.recordset![0]\n                                                      .sERIALnUMBER ??\n                                                  \"\";\n                                              assetDescription = value\n                                                      .recordset![0]\n                                                      .aSSETdESCRIPTION ??\n                                                  \"\";\n                                              assetType = value.recordset![0]\n                                                      .assettYPE ??\n                                                  \"\";\n                                              assetCondition = value\n                                                      .recordset![0]\n                                                      .aSSETcONDITION ??\n                                                  \"\";\n                                              country =\n                                                  value.recordset![0].cOUNTRY ??\n                                                      \"\";\n                                              region =\n                                                  value.recordset![0].rEGION ??\n                                                      \"\";\n                                              cityName = value\n                                                      .recordset![0].cityName ??\n                                                  \"\";\n                                              dao =\n                                                  value.recordset![0].dao ?? \"\";\n                                              daoName =\n                                                  value.recordset![0].daoName ??\n                                                      \"\";\n                                              businessUnit = value.recordset![0]\n                                                      .businessUnit ??\n                                                  \"\";\n                                              buildingNo = value.recordset![0]\n                                                      .bUILDINGNO ??\n                                                  \"\";\n                                              floorNo =\n                                                  value.recordset![0].fLOORNO ??\n                                                      \"\";\n                                              employeeID = value.recordset![0]\n                                                      .eMPLOYEEID ??\n                                                  \"\";\n                                              ponNumber = value\n                                                      .recordset![0].ponUmber ??\n                                                  \"\";\n                                              poDate =\n                                                  value.recordset![0].podate ??\n                                                      \"\";\n                                              deliveryNoteNo = value\n                                                      .recordset![0]\n                                                      .deliveryNoteNo ??\n                                                  \"\";\n                                              supplier = value\n                                                      .recordset![0].supplier ??\n                                                  \"\";\n                                              invoiceNo = value.recordset![0]\n                                                      .invoiceNo ??\n                                                  \"\";\n                                              invoiceDate = value.recordset![0]\n                                                      .invoiceDate ??\n                                                  \"\";\n                                              modelOfAsset = value.recordset![0]\n                                                      .modelofAsset ??\n                                                  \"\";\n                                              manufacturer = value.recordset![0]\n                                                      .manufacturer ??\n                                                  \"\";\n                                              ownership = value.recordset![0]\n                                                      .ownership ??\n                                                  \"\";\n                                              bought =\n                                                  value.recordset![0].bought ??\n                                                      \"\";\n                                              terminalID = value.recordset![0]\n                                                      .terminalID ??\n                                                  \"\";\n                                              atmNumber = value.recordset![0]\n                                                      .aTMNumber ??\n                                                  \"\";\n                                              locationTag = value.recordset![0]\n                                                      .locationTag ??\n                                                  \"\";\n                                              assetDateCaptured = value\n                                                      .recordset![0]\n                                                      .assetdatecaptured ??\n                                                  \"\";\n                                              assetTimeCaptured = value\n                                                      .recordset![0]\n                                                      .assetTimeCaptured ??\n                                                  \"\";\n                                              assetDateScanned = value\n                                                      .recordset![0]\n                                                      .assetdatescanned ??\n                                                  \"\";\n                                              assetTimeScanned = value\n                                                      .recordset![0]\n                                                      .assettimeScanned ??\n                                                  \"\";\n                                              qty = value.recordset![0].qTY!;\n                                              phoneExtNo = value.recordset?[0]\n                                                      .phoneExtNo ??\n                                                  \"\";\n                                              userLoginID = value.recordset?[0]\n                                                      .userLoginID ??\n                                                  \"\";\n                                            });\n                                            // unFocused the textfield\n                                            FocusScope.of(context).unfocus();\n                                            print(\n                                                \"$daoName - $businessUnit\\n$buildingAddress\\n$buildingNo - $floorNo\");\n                                          }).onError((error, stackTrace) {\n                                            FocusScope.of(context).unfocus();\n                                            _assetLocationDetailsController\n                                                .text = \"\";\n                                            _assetLocationDetailsController\n                                                .text = \"No Data Found\";\n                                            ScaffoldMessenger.of(context)\n                                                .showSnackBar(\n                                              const SnackBar(\n                                                content: Text(\n                                                  \"No Data Found\",\n                                                  style: TextStyle(\n                                                    color: Colors.white,\n                                                  ),\n                                                ),\n                                                backgroundColor:\n                                                    Colors.redAccent,\n                                              ),\n                                            );\n                                          });\n                                        },\n                                        child: const Text('Search'),\n                                      ),\n                                    ),\n                                  ),\n                                ],\n                              ),\n                            ),\n                          ],\n                        ),\n                        const SizedBox(height: 10),\n                        Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            const SizedBox(\n                              child: Text(\n                                \"Asset Location Details\",\n                                style: TextStyle(\n                                  fontSize: 15,\n                                  color: Colors.black,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                            const SizedBox(height: 5),\n                            SizedBox(\n                              width: MediaQuery.of(context).size.width * 0.9,\n                              child: TextFormField(\n                                controller: _assetLocationDetailsController,\n                                maxLines: 5,\n                                decoration: InputDecoration(\n                                  border: OutlineInputBorder(\n                                    borderRadius: BorderRadius.circular(10),\n                                  ),\n                                ),\n                              ),\n                            ),\n                          ],\n                        ),\n                        const SizedBox(height: 10),\n                        Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            const SizedBox(\n                              child: Text(\n                                \"Serial No\",\n                                style: TextStyle(\n                                  fontSize: 15,\n                                  color: Colors.black,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                            const SizedBox(height: 10),\n                            TextFormFieldWidget(\n                              controller: _serialNoController,\n                              height: 50,\n                              width: MediaQuery.of(context).size.width * 0.9,\n                            ),\n                          ],\n                        ),\n                        const SizedBox(height: 10),\n                        // Employee Name\n                        Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            const SizedBox(\n                              child: Text(\n                                \"Employee Name\",\n                                style: TextStyle(\n                                  fontSize: 15,\n                                  color: Colors.black,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                            const SizedBox(height: 10),\n                            Container(\n                              width: MediaQuery.of(context).size.width * 0.9,\n                              padding:\n                                  const EdgeInsets.symmetric(horizontal: 10),\n                              decoration: BoxDecoration(\n                                border: Border.all(\n                                  color: Colors.grey,\n                                ),\n                                borderRadius: BorderRadius.circular(10),\n                              ),\n                              child: DropdownButtonFormField(\n                                value: selectEmployeeName,\n                                isExpanded: true,\n                                items: employeeNameList.map((value) {\n                                  return DropdownMenuItem(\n                                    value: value,\n                                    child: Text(value),\n                                  );\n                                }).toList(),\n                                onChanged: (value) {\n                                  setState(\n                                    () {\n                                      selectEmployeeName = value.toString();\n                                      _employeeIdController.text =\n                                          employeeIdList[\n                                              employeeNameList.indexOf(value)];\n                                    },\n                                  );\n                                },\n                              ),\n                            ),\n                          ],\n                        ),\n\n                        const SizedBox(height: 10),\n                        // Employee Id\n                        Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            const SizedBox(\n                              child: Text(\n                                \"Employee Id\",\n                                style: TextStyle(\n                                  fontSize: 15,\n                                  color: Colors.black,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                            const SizedBox(height: 10),\n                            TextFormFieldWidget(\n                              readOnly: true,\n                              controller: _employeeIdController,\n                              height: 50,\n                              width: MediaQuery.of(context).size.width * 0.9,\n                            ),\n                          ],\n                        ),\n\n                        const SizedBox(height: 10),\n                        // phone extension\n                        Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            const SizedBox(\n                              child: Text(\n                                \"Phone Extension\",\n                                style: TextStyle(\n                                  fontSize: 15,\n                                  color: Colors.black,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                            const SizedBox(height: 5),\n                            TextFormFieldWidget(\n                              controller: _phoneExtensionController,\n                              height: 50,\n                              width: MediaQuery.of(context).size.width * 0.9,\n                            ),\n                          ],\n                        ),\n                        const SizedBox(height: 10),\n\n                        // other tag\n                        Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            const SizedBox(\n                              child: Text(\n                                \"Other Tag\",\n                                style: TextStyle(\n                                  fontSize: 15,\n                                  color: Colors.black,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                            const SizedBox(width: 5),\n                            TextFormFieldWidget(\n                              controller: _otherTagController,\n                              height: 50,\n                              width: MediaQuery.of(context).size.width * 0.9,\n                            ),\n                          ],\n                        ),\n                        const SizedBox(height: 10),\n                        // notes\n                        Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            const SizedBox(\n                              child: Text(\n                                \"Notes\",\n                                style: TextStyle(\n                                  fontSize: 15,\n                                  color: Colors.black,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                            const SizedBox(height: 5),\n                            SizedBox(\n                              width: MediaQuery.of(context).size.width * 0.9,\n                              child: TextFormField(\n                                controller: _notesController,\n                                maxLines: 3,\n                                decoration: InputDecoration(\n                                  border: OutlineInputBorder(\n                                    borderRadius: BorderRadius.circular(10),\n                                  ),\n                                ),\n                              ),\n                            ),\n                          ],\n                        ),\n                        const SizedBox(height: 10),\n                        Row(\n                          mainAxisAlignment: MainAxisAlignment.center,\n                          children: [\n                            IconButton(\n                              onPressed: () async {\n                                try {\n                                  final imgpicker = ImagePicker();\n\n                                  var pickedfile = await imgpicker.pickImage(\n                                      source: ImageSource.camera);\n                                  //you can use ImageCourse.camera for Camera capture\n\n                                  if (pickedfile != null) {\n                                    if (imagefiles != null) {\n                                      imagefiles!.add(pickedfile);\n                                    } else {\n                                      imagefiles = [pickedfile];\n                                    }\n                                    setState(() {});\n                                  } else {\n                                    print(\"No image is selected.\");\n                                  }\n                                } catch (e) {\n                                  print(\"error while picking file.\");\n                                }\n                              },\n                              icon: const Icon(\n                                Icons.add_a_photo,\n                                size: 50,\n                                color: Colors.grey,\n                              ),\n                            ),\n                            const SizedBox(width: 20),\n                            IconButton(\n                              onPressed: () async {\n                                try {\n                                  final imgpicker = ImagePicker();\n\n                                  var pickedfiles =\n                                      await imgpicker.pickMultiImage();\n                                  //you can use ImageCourse.camera for Camera capture\n\n                                  if (pickedfiles.isNotEmpty &&\n                                      pickedfiles.length <= 4) {\n                                    if (imagefiles != null) {\n                                      for (var i = 0;\n                                          i < imagefiles!.length;\n                                          i++) {\n                                        pickedfiles.add(imagefiles![i]);\n                                      }\n                                    }\n                                    imagefiles = pickedfiles;\n\n                                    setState(() {});\n                                  } else {\n                                    print(\"No image is selected.\");\n                                  }\n                                } catch (e) {\n                                  print(\"error while picking file.\");\n                                }\n                              },\n                              icon: const Icon(\n                                Icons.add_photo_alternate,\n                                size: 50,\n                                color: Colors.grey,\n                              ),\n                            ),\n                          ],\n                        ),\n                        const SizedBox(height: 10),\n                        const Text(\n                          \"Add upto 4 images\",\n                          style: TextStyle(\n                            fontSize: 10,\n                            fontWeight: FontWeight.bold,\n                            color: Colors.red,\n                          ),\n                        ),\n\n                        const SizedBox(height: 20),\n                        imagefiles != null\n                            ? Wrap(\n                                children: imagefiles!.map((imageone) {\n                                  return Stack(\n                                    children: [\n                                      Card(\n                                        shadowColor: Constant.primaryColor,\n                                        elevation: 10,\n                                        margin: const EdgeInsets.symmetric(\n                                            vertical: 10, horizontal: 5),\n                                        child: SizedBox(\n                                          height: 70,\n                                          width: 60,\n                                          child: Image.file(\n                                            File(imageone.path),\n                                            fit: BoxFit.cover,\n                                          ),\n                                        ),\n                                      ),\n                                      Positioned(\n                                        top: 0,\n                                        right: 0,\n                                        child: IconButton(\n                                          onPressed: () {\n                                            imagefiles!.remove(imageone);\n                                            setState(() {});\n                                          },\n                                          icon: Icon(\n                                            Icons.cancel,\n                                            color: Colors.red.withOpacity(0.8),\n                                          ),\n                                        ),\n                                      ),\n                                    ],\n                                  );\n                                }).toList(),\n                              )\n                            : Container(),\n                        const SizedBox(height: 20),\n                        // asset condition\n                        Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            const SizedBox(\n                              child: Text(\n                                \"Asset Condition\",\n                                style: TextStyle(\n                                  fontSize: 15,\n                                  color: Colors.black,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                            const SizedBox(height: 5),\n                            Container(\n                              width: MediaQuery.of(context).size.width * 0.9,\n                              padding:\n                                  const EdgeInsets.symmetric(horizontal: 10),\n                              decoration: BoxDecoration(\n                                border: Border.all(color: Colors.grey),\n                                borderRadius: BorderRadius.circular(10),\n                              ),\n                              child: DropdownButtonFormField(\n                                value: selectAssetCondition,\n                                isExpanded: true,\n                                items: assetConditionList.map((value) {\n                                  return DropdownMenuItem(\n                                    value: value,\n                                    child: Text(value),\n                                  );\n                                }).toList(),\n                                onChanged: (value) {\n                                  setState(() {\n                                    selectAssetCondition = value.toString();\n                                  });\n                                },\n                              ),\n                            ),\n                          ],\n                        ),\n\n                        const SizedBox(height: 10),\n                        // bought\n                        Column(\n                          crossAxisAlignment: CrossAxisAlignment.start,\n                          children: [\n                            const SizedBox(\n                              child: Text(\n                                \"Bought\",\n                                style: TextStyle(\n                                  fontSize: 15,\n                                  color: Colors.black,\n                                  fontWeight: FontWeight.bold,\n                                ),\n                              ),\n                            ),\n                            const SizedBox(height: 5),\n                            Container(\n                              width: MediaQuery.of(context).size.width * 0.9,\n                              padding:\n                                  const EdgeInsets.symmetric(horizontal: 10),\n                              decoration: BoxDecoration(\n                                border: Border.all(\n                                  color: Colors.grey,\n                                ),\n                                borderRadius: BorderRadius.circular(10),\n                              ),\n                              child: DropdownButtonFormField(\n                                value: selectBought,\n                                isExpanded: true,\n                                items: boughtList.map((value) {\n                                  return DropdownMenuItem(\n                                    value: value,\n                                    child: Text(value),\n                                  );\n                                }).toList(),\n                                onChanged: (value) {\n                                  setState(() {\n                                    selectBought = value.toString();\n                                  });\n                                },\n                              ),\n                            ),\n                          ],\n                        ),\n                        const SizedBox(height: 10),\n                        Container(\n                          width: MediaQuery.of(context).size.width * 0.9,\n                          child: Row(\n                            children: [\n                              Expanded(\n                                child: ElevatedButton(\n                                  style: ElevatedButton.styleFrom(\n                                    backgroundColor: Colors.grey,\n                                    foregroundColor: Colors.white,\n                                  ),\n                                  onPressed: () {\n                                    Navigator.pop(context);\n                                  },\n                                  child: const Text('Back'),\n                                ),\n                              ),\n                              const SizedBox(width: 10),\n                              Expanded(\n                                child: ElevatedButton(\n                                  style: ElevatedButton.styleFrom(\n                                    backgroundColor: Constant.primaryColor,\n                                    foregroundColor: Colors.white,\n                                  ),\n                                  onPressed: () async {\n                                    Constant.showLoadingDialog(context);\n                                    if (_tagController.text.trim().isEmpty ||\n                                        _serialNoController.text\n                                            .trim()\n                                            .isEmpty ||\n                                        _employeeIdController.text\n                                            .trim()\n                                            .isEmpty ||\n                                        _notesController.text.trim().isEmpty ||\n                                        _otherTagController.text\n                                            .trim()\n                                            .isEmpty ||\n                                        _locationTagController.text\n                                            .trim()\n                                            .isEmpty) {\n                                      Navigator.pop(context);\n                                      ScaffoldMessenger.of(context)\n                                          .showSnackBar(\n                                        const SnackBar(\n                                          content: Text(\n                                              \"Please fill all the fields\"),\n                                          backgroundColor: Colors.red,\n                                          duration: Duration(seconds: 2),\n                                        ),\n                                      );\n                                    } else {\n                                      SaveTagServices.saveTag(\n                                        tblAssetMasterEncodeAssetCaptureID,\n                                        majorCategory,\n                                        majorCategoryDescription,\n                                        minorCategory,\n                                        minorCategoryDescription,\n                                        _tagController.text.trim(),\n                                        _serialNoController.text.trim(),\n                                        assetDescription,\n                                        assetType,\n                                        selectAssetCondition.toString(),\n                                        country,\n                                        region,\n                                        cityName,\n                                        dao,\n                                        daoName,\n                                        businessUnit,\n                                        buildingNo,\n                                        floorNo,\n                                        _employeeIdController.text.trim(),\n                                        ponNumber,\n                                        poDate,\n                                        _notesController.text.trim(),\n                                        supplier,\n                                        invoiceNo,\n                                        invoiceDate,\n                                        modelOfAsset,\n                                        manufacturer,\n                                        ownership,\n                                        selectBought.toString(),\n                                        terminalID,\n                                        _otherTagController.text.trim(),\n                                        _locationTagController.text.trim(),\n                                        buildingName,\n                                        buildingAddress,\n                                        mainSubSeriesNo,\n                                        assetDateCaptured,\n                                        assetTimeCaptured,\n                                        assetDateScanned,\n                                        assetTimeScanned,\n                                        qty,\n                                        _phoneExtensionController.text.trim(),\n                                        _assetLocationDetailsController.text\n                                            .trim(),\n                                        imagefiles!,\n                                      ).then((value) {\n                                        Navigator.pop(context);\n                                        ScaffoldMessenger.of(context)\n                                            .showSnackBar(\n                                          const SnackBar(\n                                            content: Text(\n                                              \"Data Saved Successfully\",\n                                              style: TextStyle(\n                                                color: Colors.white,\n                                              ),\n                                            ),\n                                            backgroundColor: Colors.green,\n                                          ),\n                                        );\n                                      }).onError((error, stackTrace) {\n                                        Navigator.pop(context);\n                                        ScaffoldMessenger.of(context)\n                                            .showSnackBar(\n                                          const SnackBar(\n                                            content: Text(\n                                              \"Error while saving data\",\n                                              style: TextStyle(\n                                                color: Colors.white,\n                                              ),\n                                            ),\n                                            backgroundColor: Colors.red,\n                                          ),\n                                        );\n                                      });\n                                    }\n                                  },\n                                  child: const Text('Save'),\n                                ),\n                              ),\n                            ],\n                          ),\n                        ),\n                      ],\n                    ),\n                  ),\n                ),\n              ),\n            ),\n    );\n  }\n\n  @override\n  void dispose() {\n    super.dispose();\n    _locationTagController.dispose();\n    _tagController.dispose();\n    _assetLocationDetailsController.dispose();\n    _serialNoController.dispose();\n    _phoneExtensionController.dispose();\n    _employeeIdController.dispose();\n    _otherTagController.dispose();\n    _notesController.dispose();\n\n    employeeNameList.clear();\n\n    assetConditionList.clear();\n    selectAssetCondition = \"Select Asset Condition\";\n    assetConditionList.insert(0, \"Select Asset Condition\");\n\n    boughtList.clear();\n    selectBought = \"Select Asset Bought\";\n    boughtList.insert(0, \"Select Asset Bought\");\n\n    imagefiles?.clear();\n  }\n}\n"
        }
    ]
}